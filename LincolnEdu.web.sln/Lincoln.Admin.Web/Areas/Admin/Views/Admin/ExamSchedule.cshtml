
@{
    ViewBag.Title = "Examination Schedule";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutPage.cshtml";
}
@model Lincoln.Admin.Web.Models.AdminOnlineExaminationViewModel
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/jszip.js"></script>
<div class="content-wrapper">
    <div class="content-body">
        <section id="basic-form-layouts">
            <div class="row">
                <div class="col-12">
                    <div class="cardk">
                        <div class="card-header">
                            <h4 class="card-title">Examination Schedule</h4>

                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <label><b>MQF Level <span class="requiredstar">*</span> </b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.AcademicID, Model.AcademicList, "Select MQF Level", new { @class = "custom-select block" })
                                        <span id="AcademicIDVal" style="color:red;display:none" class="valClass">Please select MQF Level.</span>
                                    </div>
                                </div>
                                <div class="form-group col-lg-6">
                                    <label><b>Faculty<span class="requiredstar">*</span> </b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.DepartmentID, Model.DepartmentList, "Select Faculty", new { @class = "custom-select block" })
                                        <span id="FacultyCodeVal" style="color:red;display:none" class="valClass">Please select Faculty.</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <label><b>Programme<span class="requiredstar">*</span> </b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.ProgrammeVersioningID, Model.ProgramList, "Select Programme", new { @class = "custom-select block" })
                                        <span id="ProgramCodeVal" style="color:red;display:none" class="valClass">Please select Programme.</span>
                                    </div>
                                </div>
                                <div class="form-group col-lg-6">
                                    <label><b>Country<span class="requiredstar">*</span> </b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.CountryID, Model.CountryList, "Select Country", new { @class = "custom-select block" })
                                        <span id="CountryCodeVal" style="color:red;display:none" class="valClass">Please select Country.</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <label><b>Programme Year<span class="requiredstar">*</span> </b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.ProgrammeYear, Model.ProgYearList, "Select Programme Year", new { @class = "custom-select block" })
                                        <span id="AcademicYearCodeVal" style="color:red;display:none" class="valClass">Please select Year.</span>
                                    </div>
                                </div>
                                <div class="form-group col-lg-6">
                                    <label><b>Programme Semester<span class="requiredstar">*</span></b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.ProgrammeSemesterID, Model.SemisterList, "Select Semester", new { @class = "custom-select block" })
                                        <span id="ProgrammeSemesterIDVal" style="color:red;display:none" class="valClass">Please select Semester.</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <label><b>Course<span class="requiredstar">*</span> </b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.CourseID, Model.CourseList, "Select Course", new { @class = "custom-select block" })
                                        <span id="CourseIDVal" style="color:red;display:none" class="valClass">Please select Course.</span>
                                    </div>
                                </div>
                                <div class="form-group col-lg-6">
                                    <label><b>Intake<span class="requiredstar">*</span> </b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.IntakeID, Model.IntakeList, "Select Intake", new { @class = "custom-select block" })
                                        <span id="IntakeIDVal" style="color:red;display:none" class="valClass">Please select Intake.</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-lg-6">
                                    <label><b>Employee<span class="requiredstar">*</span></b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.EmployeeID, Model.EmployeeList, "Select Employee", new { @class = "custom-select block" })
                                        <span id="EmployeeIDVal" style="color:red;display:none" class="valClass">Please select Employee.</span>
                                    </div>
                                </div>
                                <div class="form-group col-lg-6">
                                    <label><b>Examination <span class="requiredstar">*</span></b></label>
                                    <div class="position-relative has-icon-left">
                                        @Html.DropDownListFor(a => a.ExaminationID, Model.ExaminationList, "Select Examination", new { @class = "custom-select block" })
                                        <span id="ExaminationIDVal" style="color:red;display:none" class="valClass">Please select Examination.</span>
                                    </div>
                                </div>
                            </div>

                            <div class="panel panel-default">
                                <div class="row">
                                    <div class="form-group col-lg-6">
                                        <label>Examination  Date<span class="requiredstar">*</span> </label>
                                        <div class="position-relative has-icon-left">
                                            @Html.TextBoxFor(a => a.ExaminationDate, new { @class = "form-control" })
                                            <div class="form-control-position">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            <span id="ExaminationDateVal" style="color:red;display:none" class="valClass"></span>
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Time<span class="requiredstar">*</span> </label>
                                        <div class="position-relative">
                                            @Html.TextBoxFor(a => a.ExaminationTime, new { @class = "form-control" })
                                            <span id="ExaminationTimeVal" style="color:red;display:none" class="valClass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-lg-6">
                                        <label>Duration<span class="requiredstar">*</span> </label>
                                        <div class="position-relative">
                                            @Html.TextBoxFor(a => a.ExaminationDuration, new { @class = "form-control" })
                                            <span id="ExaminationDurationVal" style="color:red;display:none" class="valClass"></span>
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Maximum Marks</label>
                                        <div class="position-relative ">
                                            @Html.TextBoxFor(a => a.MaximumMarks, new { @class = "form-control", @readonly = "readonly" })
                                            <span id="MaximumMarksVal" style="color:red;display:none" class="valClass"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-lg-6">
                                        <label>Calculator Settings :</label>
                                        <div >
                                            <input type="checkbox" id="IsCalculator" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @*<div id="ExamScheduleDiv"></div>*@
                            <input type="file" id="fileUpload" />
                            <input type="button" id="upload" value="Upload" />
                            <hr />
                            <div id="dvExcel">
                            </div>
                            <center>
                                <button type="button" onclick="fnSaveExamSchedule()" class="btn btn-primary">
                                    <i class="fa fa-check-square-o"></i> Save
                                </button>
                                <button type="button" onclick="fnResetScreen()" class="btn btn-danger">
                                    <i class="fa fa-check-square-o"></i> Clear
                                </button>
                            </center>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<script>
    $(function () {
        $('li a[href="/Admin/Admin/ExamSchedule"]').parent('li').addClass('active');
        $('#ExaminationTime').datetimepicker({
            format: 'LT'
        });
    });
    function fnResetScreen() {
        $("#AcademicID").val('');
        $("#DepartmentID").empty().append('<option value="">Select Faculty</option>');
        $("#ProgrammeVersioningID").empty().append('<option value="">Select Programme</option>');
        $("#CountryID").empty().append('<option value="">Select Country</option>');
        $("#ProgrammeYear").empty().append('<option value="">Select Programme Year</option>');
        $("#ProgrammeSemesterID").empty().append('<option value="">Select Semester</option>');
        $("#CourseID").empty().append('<option value="">Select Course</option>');
        $('#ExamScheduleDiv').empty();
    }
    $(document).on("focus", "#ExaminationDate", function () {

    });
    $(document).on("change", "#AcademicID", function () {
        $("#DepartmentID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetDepartmentDrop","Admin",new { area="Admin"})', // we are calling json method
            dataType: 'json',
            data: { academicID: $("#AcademicID").val() != '' ? $("#AcademicID").val() : "0" },
            success: function (res) {
                $("#DepartmentID").append('<option value="">Select Faculty</option>');
                $.each(res, function (i, state) {
                    $("#DepartmentID").append('<option value="' + state.Value + '">' +
                         state.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Faculty.' + ex);
            }
        });
        return false;
    })
    $(document).on("change", "#DepartmentID", function () {
        $("#ProgrammeVersioningID").empty().append('<option value="">Select Programme</option>');
        $("#CountryID").empty().append('<option value="">Select Country</option>');
        $("#ProgrammeYear").empty().append('<option value="">Select Programme Year</option>');
        $("#ProgrammeSemesterID").empty().append('<option value="">Select Semester</option>');
        $("#CourseID").empty().append('<option value="">Select Course</option>');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetProgDropWithVersion","Admin",new { area="Admin"})',
            dataType: 'json',
            data: { departmentID: $("#DepartmentID").val() != '' ? $("#DepartmentID").val() : "0" },
            success: function (res) {
                $.each(res, function (i, state) {
                    $("#ProgrammeVersioningID").append('<option value="' + state.Value + '">' +
                        state.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Faculty.' + ex);
            }
        });
        return false;
    });


    $(document).on("change", "#ProgrammeVersioningID", function () {
        $("#CountryID").empty().append('<option value="">Select Country</option>');
        $("#ProgrammeYear").empty().append('<option value="">Select Programme Year</option>');
        $("#ProgrammeSemesterID").empty().append('<option value="">Select Semester</option>');
        $("#CourseID").empty().append('<option value="">Select Course</option>');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramSelection", "Admin",new { area="Admin"})', // we are calling json method
            dataType: 'json',
            data: { programmeVersionID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0" },
            success: function (res) {
                if (res != null) {
                    $.each(res.CountryList, function (i, state) {
                        $("#CountryID").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                }
                else {

                    $("#CountryCode").append('<option value="">Select Country</option>');
                }
            },
            error: function (ex) {
                alert('Failed to retrieve country.' + ex);
            }
        });
        return false;
    });

    $(document).on("change", "#CountryID", function () {
        $("#ProgrammeYear").empty().append('<option value="">Select Programme Year</option>');
        $("#ProgrammeSemesterID").empty().append('<option value="">Select Semester</option>');
        $("#CourseID").empty().append('<option value="">Select Course</option>');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeCountrySelection", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: {
                programmeVersionID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                countryID: $('#CountryID').val() != '' ? $("#CountryID").val() : "0"
            },
            success: function (res) {
                if (res != null) {
                    $.each(res.ProgYearList, function (i, state) {
                        $("#ProgrammeYear").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                }
                else {
                    $("#ProgrammeYear").append('<option value="">Select Programme Year</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Programme year.' + ex);
            }
        });
        return false;
    });

    $(document).on("change", "#ProgrammeYear", function () {
        $("#ProgrammeSemesterID").empty().append('<option value="">Select Semester</option>');
        $("#CourseID").empty().append('<option value="">Select Course</option>');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramYearSelection", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: {
                programmeVersionID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                countryID: $('#CountryID').val() != '' ? $("#CountryID").val() : "0",
                programYear: $('#ProgrammeYear').val() != '' ? $("#ProgrammeYear").val() : "0"
            },
            success: function (res) {
                if (res != null) {
                    $.each(res.ProgSEMList, function (i, state) {
                        $("#ProgrammeSemesterID").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                }
                else {

                    $("#ProgrammeSemesterID").append('<option value="">Select Semester</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Semester.' + ex);
            }
        });
        return false;
    });


    $(document).on("change", "#ProgrammeSemesterID", function () {
        $("#CourseID").empty().append('<option value="">Select Course</option>');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCourseExam", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: {
                programVersioningID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                countryId: $('#CountryID').val() != '' ? $("#CountryID").val() : "0",
                programmeYear: $('#ProgrammeYear').val() != '' ? $("#ProgrammeYear").val() : "0",
                programmeSem: $('#ProgrammeSemesterID').val() != '' ? $("#ProgrammeSemesterID").val() : "0"
            },
            success: function (res) {
                $.each(res, function (i, state) {
                    $("#CourseID").append('<option value="' + state.Value + '">' +
                        state.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Course.' + ex);
            }
        });
        return false;
    });
    $(document).on("change", "#CourseID", function () {
        if ($('#CourseID').val() != '') {
            $('#overlay').show();
            var model = {
                DepartmentID: $("#DepartmentID").val(),
                ProgrammeVersioningID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                CountryID: $('#CountryID').val() != '' ? $("#CountryID").val() : "0",
                ProgrammeSemesterID: $('#ProgrammeSemesterID').val() != '' ? $("#ProgrammeSemesterID").val() : "0",
                CourseID: $('#CourseID').val() != '' ? $("#CourseID").val() : "0",
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMaximumMarks", "Admin",new { area="Admin"})',
                dataType: 'html',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(model),
                success: function (res) {
                    $('#overlay').hide();
                    $('#MaximumMarks').val(res);
                },
                error: function (ex) {
                    $('#overlay').hide();
                    console.log(ex);
                }
            });


        }
    });

    $(document).on("change", "#ExaminationID", function () {
        if ($('#ExaminationID').val() != '') {
            $('#overlay').show();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetExaminationNameById", "Admin",new { area="Admin"})',
                dataType: 'json',
                contentType: "application/json",
                data: { examinationId: $('#ExaminationID').val() },
                success: function (res) {
                    debugger;
                    var startdate = res.StartDate;
                    var endDate = res.EndDate
                    var dateStart = startdate.split('-');
                    var dateEnd = endDate.split('-');
                    var formatedDateStart = dateStart[1] + "/" + dateStart[0] + "/" + dateStart[2];
                    var formatedDateEnd = dateEnd[1] + "/" + dateEnd[0] + "/" + dateEnd[2];
                    $('#ExaminationDate').datetimepicker({
                        format: 'DD/MM/YYYY',
                        minDate: new Date(formatedDateStart),
                        maxDate: new Date(formatedDateEnd),
                        daysOfWeekDisabled: [6]
                    });
                    $('#ExaminationDate').val('');
                    $('#overlay').hide();

                },
                error: function (ex) {
                    $('#overlay').hide();
                    console.log(ex);
                }
            });


        }
    });
    function fnSaveExamSchedule() {
        $('.valClass').css({ 'display': 'none' });
        var studentrecord = [];
        $.each($(".req"), function () {
            studentrecord.push({
                EnrollmentNo: $(this).html(),
                EmailID: $(this).closest('tr').find('td:nth-child(3)').html(),
                StudentName: $(this).closest('tr').find('td:nth-child(2)').html()
            });
        });
        if ($('#AcademicID').val() == '') {
            $('#AcademicIDVal').css({ 'display': 'block' });
        }
        else if ($('#DepartmentID').val() == '') {
            $('#DepartmentIDVal').css({ 'display': 'block' });
        }
        else if ($('#ProgrammeVersioningID').val() == '') {
            $('#ProgramCodeVal').css({ 'display': 'block' });
        }

        else if ($('#CountryID').val() == '') {
            $('#CountryCodeVal').css({ 'display': 'block' });
        }
        else if ($('#ProgrammeSemesterID').val() == '') {
            $('#ProgrammeSemesterIDVal').css({ 'display': 'block' });
        }
        else if ($('#CourseID').val() == '') {
            $('#CourseIDVal').css({ 'display': 'block' });
        }
        else if ($('#IntakeID').val() == '') {
            $('#IntakeIDVal').css({ 'display': 'block' });
        }
        else if ($('#EmployeeID').val() == '') {
            $('#EmployeeIDVal').css({ 'display': 'block' });
        }
        else if ($('#ExaminationID').val() == '') {
            $('#ExaminationIDVal').css({ 'display': 'block' });
        }
        else if ($('#ExaminationDate').val() == '') {
            $('#ExaminationDateVal').html('Date is required.');
            $('#ExaminationDateVal').css({ 'display': 'block' });
        }
        else if ($('#ExaminationTime').val() == '') {
            $('#ExaminationTimeVal').html('Examination Time is required.');
            $('#ExaminationTimeVal').css({ 'display': 'block' });
        }
        else if ($('#ExaminationDuration').val() == '') {
            $('#ExaminationDurationVal').html('Examination Duration is required.');
            $('#ExaminationDurationVal').css({ 'display': 'block' });
        }
        else if (studentrecord.length == 0) {
            alert('Student record Excel Sheet need to upload with coreect format.');
        }
        else {
            $('#overlay').show();

            var model = {
                DepartmentID: $("#DepartmentID").val(),
                ProgrammeVersioningID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                CountryID: $('#CountryID').val() != '' ? $("#CountryID").val() : "0",
                ProgrammeSemesterID: $('#ProgrammeSemesterID').val() != '' ? $("#ProgrammeSemesterID").val() : "0",
                CourseID: $('#CourseID').val() != '' ? $("#CourseID").val() : "0",
                EmployeeID: $("#EmployeeID").val(),
                ExaminationDate: $('#ExaminationDate').val(),
                ExaminationTime: $('#ExaminationTime').val(),
                ExaminationDuration: $('#ExaminationDuration').val(),
                ExaminationID: $('#ExaminationID').val(),
                IntakeID: $('#IntakeID').val(),
                IsCalculator: $('#IsCalculator').is(':checked') ? 1 : 0,
                CustomList: studentrecord
            };
            $.ajax({
                url: '@Url.Action("SaveOnlineExaminationSchedule", "Admin",new {area="Admin" })',
                data: JSON.stringify(model),
                type: 'POST',
                cache: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result > 0) {
                        if (result > 0) {
                            $('#overlay').hide();
                            alert('Your request has been processed successfully.');
                            fnResetScreen();
                        }
                        else {
                            $('#overlay').hide();
                            alert('Error in your requst.');
                        }
                    }
                },
                error: function (e) {
                    $('#overlay').hide();
                    alert('Error in your requst.');
                }
            });
        }
    }
    function fnResetScreen() {
        $("#AcademicID").val('');
        $("#DepartmentID").empty().append('<option value="">Select Faculty</option>');
        $("#ProgrammeVersioningID").empty().append('<option value="">Select Programme</option>');
        $("#CountryID").empty().append('<option value="">Select Country</option>');
        $("#ProgrammeYear").empty().append('<option value="">Select Programme Year</option>');
        $("#ProgrammeSemesterID").empty().append('<option value="">Select Semester</option>');
        $("#CourseID").empty().append('<option value="">Select Course</option>');
        $("#EmployeeID").val('');
        $('#ExaminationID').val('')
        $('#ExaminationDate').val('');
        $('#ExaminationTime').val('');
        $('#ExaminationDuration').val('');
        $('#MaximumMarks').val('');
        $('#IntakeID').val('');
        $('#dvExcel').empty();
    }
    //----------------------------------Excel Section---------------------------------------------
    $(document).on("click", "#upload", function () {
        //Reference the FileUpload element.
        var fileUpload = $("#fileUpload")[0];

        //Validate whether File is valid Excel file.
        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
        if (regex.test(fileUpload.value.toLowerCase())) {
            if (typeof (FileReader) != "undefined") {
                var reader = new FileReader();

                //For Browsers other than IE.
                if (reader.readAsBinaryString) {
                    reader.onload = function (e) {
                        ProcessExcel(e.target.result);
                    };
                    reader.readAsBinaryString(fileUpload.files[0]);
                } else {
                    //For IE Browser.
                    reader.onload = function (e) {
                        var data = "";
                        var bytes = new Uint8Array(e.target.result);
                        for (var i = 0; i < bytes.byteLength; i++) {
                            data += String.fromCharCode(bytes[i]);
                        }
                        ProcessExcel(data);
                    };
                    reader.readAsArrayBuffer(fileUpload.files[0]);
                }
            } else {
                alert("This browser does not support HTML5.");
            }
        } else {
            alert("Please upload a valid Excel file.");
        }
    });
    function ProcessExcel(data) {
        debugger;
        //Read the Excel File data.
        var workbook = XLSX.read(data, {
            type: 'binary'
        });

        //Fetch the name of First Sheet.
        var firstSheet = workbook.SheetNames[0];

        //Read all rows from First Sheet into an JSON array.
        var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);

        //Create a HTML Table element.
        var table = $("<table class='table table-striped table-bordered base-style' style='width:100%' />");

        //Add the header row.
        var row = $(table[0].insertRow(-1));

        //Add the header cells.
        var headerCell = $("<th />");
        headerCell.html("Id");
        row.append(headerCell);

        var headerCell = $("<th />");
        headerCell.html("Name");
        row.append(headerCell);

        var headerCell = $("<th />");
        headerCell.html("Email");
        row.append(headerCell);


        //Add the data rows from Excel file.
        for (var i = 0; i < excelRows.length; i++) {
            //Add the data row.
            var row = $(table[0].insertRow(-1));

            if (excelRows[i].Id == '' || excelRows[i].Name == '' || excelRows[i].Email == '') {
                alert('Excel is not correct format in row no ' + (i + 1));

            }
            else {
                var cell = $("<td class='req' />");
                cell.html(excelRows[i].Id);
                row.append(cell);

                cell = $("<td />");
                cell.html(excelRows[i].Name);
                row.append(cell);

                cell = $("<td />");
                cell.html(excelRows[i].Email);
                row.append(cell);
            }
            //Add the data cells.



        }

        var dvExcel = $("#dvExcel");
        dvExcel.empty();
        dvExcel.append(table);
    };
</script>
