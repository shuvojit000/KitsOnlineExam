@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@
@using Lincoln.OnlineExam.Response;

@*@model Lincoln.Admin.Web.Models.SubjectAssessmentViewModel*@
@model Lincoln.OnlineExam.Response.SubjectAssessmentResponseDTO

<div class="panel-body">
    <!--main content start-->
    <div class="row">
        <div class="col-lg-12">
            <!--PAGE CONTENT BEGINS-->
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-lg-6">
                        <label><b>Faculty<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.FacultyCode, Model.FacultyList, "Select Faculty", new { @class = "custom-select block" })
                            <span id="FacultyCodeVal" style="color:red;display:none" class="valClass">Please select Faculty.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Programme<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.ProgrammeVersioningID, Model.ProgramList, "Select Programme", new { @class = "custom-select block" })
                            <span id="ProgramCodeVal" style="color:red;display:none" class="valClass">Please select Programme.</span>
                        </div>
                    </div>
                    
                    <div class="form-group col-lg-6">
                        <label><b>Country<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.CountryCode, Model.CountryList, "Select Country", new { @class = "custom-select block" })
                            <span id="CountryCodeVal" style="color:red;display:none" class="valClass">Please select Country.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Academic Year<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.AcademicYearCode, Model.AcademicYearList, "Select Academic Year", new { @class = "custom-select block" })
                            <span id="AcademicYearCodeVal" style="color:red;display:none" class="valClass">Please select Year.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Semister<span class="requiredstar">*</span></b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.SemisterCode, Model.SemisterList, "Select Semester", new { @class = "custom-select block" })
                            <span id="SemisterCodeVal" style="color:red;display:none" class="valClass">Please select Semester.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Course<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.CourseCode, Model.CourseList, "Select Course", new { @class = "custom-select block" })
                            <span id="CourseIDVal" style="color:red;display:none" class="valClass">Please select Course.</span>
                        </div>
                    </div>

                </div>
                <table class="form-table" id="customFields">
                    <thead>
                        <tr>
                            <th scope="row"><label for="customFieldName">Assessment</label></th>
                            <th scope="row"><label for="customFieldName">Percentage(%)</label></th>
                            <th scope="row"><label for="customFieldName">Full Marks</label></th>
                            <th scope="row"><label for="customFieldName">Type</label></th>
                           
                        </tr>
                    </thead>
                    <tbody id="addtbody">
                        @if (Model.SubAssessmentDetails != null && Model.SubAssessmentDetails.Count() > 0)
                        {
                            var last = Model.SubAssessmentDetails.Last();
                            foreach (var item in Model.SubAssessmentDetails)
                            {
                                <tr valign="top">
                                    <td>
                                        <input type="text" class="form-control" readonly="readonly" id="AssessmentName" name="AssessmentName[]" value=@item.AssessmentName /> &nbsp;

                                    </td>
                                    <td>
                                        <input type="text" class="form-control" id="AssessmentPercentage" name="AssessmentPercentage[]" value=@item.AssessmentPercentage placeholder="Percentage" /> &nbsp;
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" id="FullMarks" name="FullMarks[]" value=@item.FullMarks placeholder="Full Marks" /> &nbsp;
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" readonly="readonly" id="AssessmentType" name="AssessmentType[]" value=@item.AssessmentType placeholder="Type" /> &nbsp;
                                    </td>



                                </tr>
                            }

                        }


                    </tbody>
                </table>
                <div class="modal-footer">
                    <button type="button" onclick="fnSaveSubjectAssessment(@Model.SubjectAssessmentID)" class="btn btn-primary">
                        <i class="fa fa-check-square-o"></i> Save
                    </button>
                </div>
                <!--PAGE CONTENT ENDS-->
            </div>
        </div>
        <!--main contant end-->
    </div>
</div>



<script>

    $(document).on("change", "#FacultyCode", function () {
        $("#ProgrammeVersioningID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetProgDropWithVersion","Admin",new { area="Admin"})',
            dataType: 'json',
            data: { departmentID: $("#FacultyCode").val() },
            success: function (res) {
                $("#ProgrammeVersioningID").append('<option value="">Select Programme</option>');
                $.each(res, function (i, state) {
                    $("#ProgrammeVersioningID").append('<option value="' + state.Value + '">' +
                        state.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Faculty.' + ex);
            }
        });
        return false;
    });


    $(document).on("change", "#ProgrammeVersioningID", function () {
        
        $("#CountryCode").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramSelection", "Admin",new { area="Admin"})', // we are calling json method
            dataType: 'json',
            data: { programmeVersionID: $("#ProgrammeVersioningID").val() },
            success: function (res) {
                if (res != null) {
                    $("#CountryCode").append('<option value="">Select Country</option>');
                    $.each(res.CountryList, function (i, state) {
                        $("#CountryCode").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                }
                else {

                    $("#CountryCode").append('<option value="">Select Country</option>');
                }
            },
            error: function (ex) {
                alert('Failed to retrieve country.' + ex);
            }
        });
        return false;
    });

    $(document).on("change", "#CountryCode", function () {
        $("#AcademicYearCode").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeCountrySelection", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: { programmeVersionID: $("#ProgrammeVersioningID").val(), countryID: $('#CountryCode').val() },
            success: function (res) {
                if (res != null) {
                    $("#AcademicYearCode").append('<option value="">Select Academic Year</option>');
                    $.each(res.ProgYearList, function (i, state) {
                        $("#AcademicYearCode").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                }
                else {
                    $("#AcademicYearCode").append('<option value="">Select Academic Year</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Programme year.' + ex);
            }
        });
        return false;
    });

    $(document).on("change", "#AcademicYearCode", function () {
        $("#SemisterCode").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramYearSelection", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: { programmeVersionID: $("#ProgrammeVersioningID").val(), countryID: $('#CountryCode').val(), programYear: $('#AcademicYearCode').val() },
            success: function (res) {
                if (res != null) {
                    $("#SemisterCode").append('<option value="">Select Semester</option>');
                    $.each(res.ProgSEMList, function (i, state) {
                        $("#SemisterCode").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                }
                else {

                    $("#SemisterCode").append('<option value="">Select Semester</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Semester.' + ex);
            }
        });
        return false;
    });


    $(document).on("change", "#SemisterCode", function () {
        $("#CourseCode").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCourseExam", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: {
                programVersioningID: $("#ProgrammeVersioningID").val(), countryId: $('#CountryCode').val(),
                programmeYear: $('#AcademicYearCode').val(), programmeSem: $('#SemisterCode').val()
            },
            success: function (res) {
                $("#CourseCode").append('<option value="">Select Course</option>');
                $.each(res, function (i, state) {
                    $("#CourseCode").append('<option value="' + state.Value + '">' +
                        state.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Course.' + ex);
            }
        });
        return false;
    });


    $(document).on('keypress', '#AssessmentPercentage', function (event) {
        return isNumber(event, this)
    });
    $(document).on('keypress', '#FullMarks', function (event) {
        return isNumber(event, this)
    });


    function isNumber(evt, element) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (
            (charCode != 46 || $(element).val().indexOf('.') != -1) &&
            (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    $(document).on("change", "#ProgrammeVersioningID", function () {
        $("#addtbody").empty();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetAssessmentById", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: { programmeVersioningId: $("#ProgrammeVersioningID").val(), departmentId: $("#FacultyCode").val() },
            success: function (res) {

                $.each(res, function (i, state) {
                    $("#addtbody")
                    .append('<tr><td><input type="text" readonly="readonly" class="form-control" id="AssessmentName" name="AssessmentName[]" value="' + state.AssessmentName + '" /></td> &nbsp;' +
                          ' <td><input type="text" class="form-control" id="AssessmentPercentage" name="AssessmentPercentage[]" value="" placeholder="Percentage" /></td> &nbsp;' +
                          ' <td><input type="text" class="form-control" id="FullMarks" name="FullMarks[]" value="" placeholder="Full Marks" /></td>   &nbsp;' +
                          ' <td><input type="text" class="form-control" readonly="readonly" id="AssessmentType" name="AssessmentType[]" value="' + state.AssessmentType + '"  /></td> &nbsp;' +
                          '</tr > ');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve.' + ex);
            }
        });
    });
</script>
