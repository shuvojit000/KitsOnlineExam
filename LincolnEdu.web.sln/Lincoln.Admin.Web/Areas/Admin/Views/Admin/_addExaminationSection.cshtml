
@model Lincoln.Admin.Web.Models.ExaminationSectionViewModel

<div class="panel-body">
    <!--main content start-->
    <div class="row">
        <div class="col-lg-12">
            <!--PAGE CONTENT BEGINS-->
            <div class="modal-body">
                <div class="row">
                    <div class="row">
                        <div class="form-group col-lg-12">
                            <label><b>MQF Level <span class="requiredstar">*</span> </b></label>
                            <div class="position-relative has-icon-left">
                                @Html.DropDownListFor(a => a.AcademicID, Model.AcademicList, "Select MQF Level", new { @class = "custom-select block" })
                                <span id="AcademicIDVal" style="color:red;display:none" class="valClass">Please select MQF Level.</span>

                            </div>
                        </div>

                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Faculty <span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.FacultyCode, Model.FacultyList, "Select Faculty", new { @class = "custom-select block" })
                            <span id="FacultyCodeVal" style="color:red;display:none" class="valClass">Please select Faculty.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Programme <span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.ProgrammeVersioningID, Model.ProgramList, "Select Programme", new { @class = "custom-select block" })
                            <span id="ProgramCodeVal" style="color:red;display:none" class="valClass">Please select Programme.</span>
                        </div>
                    </div>

                    <div class="form-group col-lg-6">
                        <label><b>Country: </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.CountryCode, Model.CountryList, "Select Country", new { @class = "custom-select block" })
                            <span id="CountryCodeVal" style="color:red;display:none" class="valClass">Please select Country.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Programme Year<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.AcademicYearCode, Model.AcademicYearList, "Select Programme Year", new { @class = "custom-select block" })
                            <span id="AcademicYearCodeVal" style="color:red;display:none" class="valClass">Please select Year.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Semester<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.SemisterCode, Model.SemisterList, "Select Semester", new { @class = "custom-select block" })
                            <span id="SemisterCodeVal" style="color:red;display:none" class="valClass">Please select Semester.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Course<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.CourseID, Model.CourseList, "Select Course", new { @class = "custom-select block" })
                            <span id="CourseIDVal" style="color:red;display:none" class="valClass">Please select Course.</span>
                        </div>
                    </div>

                    <div class="form-group col-lg-6">
                        <label><b>Section<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.SectionID, Model.SectionList, "Select Section", new { @class = "custom-select block" })
                            <input type="hidden" id="Section" value="" />
                            <span id="SectionIDVal" style="color:red;display:none" class="valClass">Please select Section.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Question Type<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            <input type="radio" name="QuestionType" value="S" @(Model.QuestionType == "S" ? "checked" : "")> Subjective
                            <input type="radio" name="QuestionType" value="O" @(Model.QuestionType == "O" ? "checked" : "")> Objective
                            <span id="QuestionTypeVal" style="color:red;display:none" class="valClass">Please select Question Type.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Maximum Marks<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative">
                            @Html.TextBoxFor(a => a.MaximumMarks, new { @class = "form-control", @length = "6" })
                            <span id="MaximumMarksVal" style="color:red;display:none" class="valClass">Marks is required.</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="fnSaveExaminationSection(@Model.ExaminationSectionID)" class="btn btn-primary">
                    <i class="fa fa-check-square-o"></i> Save
                </button>
            </div>
            <!--PAGE CONTENT ENDS-->
        </div>
    </div>
    <!--main contant end-->
</div>

<script>
     $(document).on("change","#AcademicID",function () {
        $("#FacultyCode").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetDepartmentDrop","Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: { academicID: $("#AcademicID").val() != '' ? $("#AcademicID").val() : "0" },
            success: function (res) {
                // states contains the JSON formatted list
                // of states passed from the controller
                $("#FacultyCode").append('<option value="">Select Faculty</option>');
                $.each(res, function (i, state) {
                    $("#FacultyCode").append('<option value="' + state.Value + '">' +
                         state.Text + '</option>');
                    // here we are adding option for States

                });
            },
            error: function (ex) {
                alert('Failed to retrieve Faculty.' + ex);
            }
        });
        return false;
    })
    $(document).on("change","#FacultyCode",function () {
        $("#ProgrammeVersioningID").empty();
        $("#CountryCode").empty();
        $("#AcademicYearCode").empty();
        $("#SemisterCode").empty();
        $("#CourseID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetProgDropWithVersion","Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: { departmentID: $("#FacultyCode").val() != '' ? $("#FacultyCode").val() : "0" },
            success: function (res) {
                $("#ProgrammeVersioningID").append('<option value="">Select Programme</option>');
                $.each(res, function (i, state) {
                    $("#ProgrammeVersioningID").append('<option value="' + state.Value + '">' +
                        state.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Faculty.' + ex);
            }
        });
        return false;
    });


    $(document).on("change","#ProgrammeVersioningID",function () {
       
        $("#CountryCode").empty();
        $("#AcademicYearCode").empty();
        $("#SemisterCode").empty();
        $("#CourseID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramSelection", "Admin",new { area="Admin"})', // we are calling json method
            dataType: 'json',
            data: { programmeVersionID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0" },
            success: function (res) {
                if (res != null) {

                    $("#CountryCode").append('<option value="">Select Country</option>');
                    $.each(res.CountryList, function (i, state) {
                        $("#CountryCode").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States

                    });
                }
                else {

                    $("#CountryCode").append('<option value="">Select Country</option>');
                }
            },
            error: function (ex) {
                alert('Failed to retrieve country.' + ex);
            }
        });


        return false;
    });

    $(document).on("change", "#CountryCode", function () {
        $("#AcademicYearCode").empty();        
        $("#SemisterCode").empty();
        $("#CourseID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeCountrySelection", "Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: {
                programmeVersionID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                countryID: $('#CountryCode').val() != '' ? $("#CountryCode").val() : "0"
            },
            success: function (res) {
                if (res != null) {

                    $("#AcademicYearCode").append('<option value="">Select Programme Year</option>');
                    $.each(res.ProgYearList, function (i, state) {
                        $("#AcademicYearCode").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States

                    });
                }
                else {

                    $("#AcademicYearCode").append('<option value="">Select Programme Year</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Programme year.' + ex);
            }
        });
        return false;
    });

    $(document).on("change", "#AcademicYearCode", function () {
        $("#SemisterCode").empty();       
        $("#CourseID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramYearSelection", "Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: {
                programmeVersionID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                countryID: $('#CountryCode').val() != '' ? $("#CountryCode").val() : "0",
                programYear: $('#AcademicYearCode').val() != '' ? $("#AcademicYearCode").val() : "0"
            },
            success: function (res) {
                if (res != null) {
                    
                    $("#SemisterCode").append('<option value="">Select Semester</option>');
                    $.each(res.ProgSEMList, function (i, state) {
                        $("#SemisterCode").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States

                    });
                }
                else {

                    $("#SemisterCode").append('<option value="">Select Semester</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Semester.' + ex);
            }
        });
        return false;
    });


    $(document).on("change","#SemisterCode",function () {
        $("#CourseID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCourseExam", "Admin",new { area="Admin"})',
            dataType: 'json',
            data: {
                programVersioningID: $("#ProgrammeVersioningID").val() != '' ? $("#ProgrammeVersioningID").val() : "0",
                countryId: $('#CountryCode').val() != '' ? $("#CountryCode").val() : "0",
                programmeYear: $('#AcademicYearCode').val() != '' ? $("#AcademicYearCode").val() : "0",
                programmeSem: $('#SemisterCode').val() != '' ? $("#SemisterCode").val() : "0"
            },
              success: function (res) {
                $("#CourseID").append('<option value="">Select Course</option>');
                $.each(res, function (i, state) {
                    $("#CourseID").append('<option value="' + state.Value + '">' +
                        state.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Course.' + ex);
            }
        });
        return false;
    });
     $(document).on('keypress', '#MaximumMarks', function (event) {
        return isNumber(event, this)
    });
    function isNumber(evt, element) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (
            (charCode != 46 || $(element).val().indexOf('.') != -1) &&
            (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>