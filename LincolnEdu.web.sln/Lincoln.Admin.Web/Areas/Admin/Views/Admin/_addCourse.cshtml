@model Lincoln.Admin.Web.Models.CourseViewModel
<div class="panel-body">
    <!--main content start-->
    <div class="row">
        <div class="col-lg-12">
            <!--PAGE CONTENT BEGINS-->
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-lg-6">
                        <label><b>Faculty<span class="requiredstar">*</span> </b></label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.DepartmentID, Model.DepartmentList, "Select Faculty", new { @class = "custom-select block" })
                            <span id="DepartmentIDVal" style="color:red;display:none" class="valClass">Please select Faculty.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Programme<span class="requiredstar">*</span></b> </label>
                        @Html.DropDownListFor(a => a.ProgrammeID, Model.ProgrammeList, "Select Programme", new { @class = "custom-select block" })

                        <span id="ProgrammeIDVal" style="color:red;display:none" class="valClass">Please select Programme.</span>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-lg-6">
                        <label><b>Country <span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left gt">
                            @Html.DropDownListFor(a => a.CountryID, Model.CountryList, "Select Country", new { @class = "custom-select block" })
                            <span id="CountryIDVal" style="color:red;display:none" class="valClass">Please select Country.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Programme Year<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.ProgrammeYear, Model.ProgYearList, "Select Programme Year", new { @class = "custom-select block" })
                            <span id="ProgrammeYearVal" style="color:red;display:none" class="valClass">Please select Programme Year.</span>
                        </div>
                    </div>

                </div>
                <div class="row">

                    <div class="form-group col-lg-6">
                        <label><b>Programme Semester<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            @Html.DropDownListFor(a => a.ProgrammeSemester, Model.ProgSEMList, "Select Semester", new { @class = "custom-select block" })
                            <span id="ProgrammeSemesterVal" style="color:red;display:none" class="valClass">Please select Semester.</span>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label><b>Semester Type<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            <input type="radio" name="SemesterType" value="Short" @(Model.SemesterType == "Short" ? "checked" : "")> Short
                            <input type="radio" name="SemesterType" value="Long" @(Model.SemesterType == "Long" ? "checked" : "")> Long
                            <span id="SemesterTypeVal" style="color:red;display:none" class="valClass">Please select Semester Type.</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-lg-6">
                        <label><b>Course code<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            @Html.TextBoxFor(a => a.CourseCode, new { @class = "form-control" })
                            <div class="form-control-position">
                                <i class="fa fa-book"></i>
                            </div>
                            <span id="CourseCodeVal" style="color:red;display:none" class="valClass"></span>
                        </div>
                    </div>

                    <div class="form-group col-lg-6">
                        <label><b>Course Name<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            @Html.TextBoxFor(a => a.CourseName, new { @class = "form-control" })
                            <div class="form-control-position">
                                <i class="fa fa-book"></i>
                            </div>
                            <span id="CourseNameVal" style="color:red;display:none" class="valClass"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-lg-6">
                        <label><b>Approval  No<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            @Html.TextBoxFor(a => a.ApprovalNo, new { @class = "form-control" })
                            <div class="form-control-position">
                                <i class="fa fa-book"></i>
                            </div>
                            <span id="ApprovalNoVal" style="color:red;display:none" class="valClass"></span>
                        </div>
                    </div>

                    <div class="form-group col-lg-6">
                        <label><b>Credit<span class="requiredstar">*</span></b> </label>
                        <div class="position-relative has-icon-left">
                            @Html.TextBoxFor(a => a.Credit, new { @class = "form-control", @type = "number" })
                            <div class="form-control-position">
                                <i class="fa fa-book"></i>
                            </div>
                            <span id="CreditVal" style="color:red;display:none" class="valClass"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="fnSaveCourse(@Model.CourseID)" class="btn btn-primary">
                    <i class="fa fa-check-square-o"></i> Save
                </button>
            </div>
            <!--PAGE CONTENT ENDS-->
        </div>
    </div>
    <!--main contant end-->
</div>
<script>

    //Dropdownlist Selectedchange event
    $(document).on("change", "#DepartmentID", function () {
        $("#ProgrammeID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetProgDrop","Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: { departmentID: $("#DepartmentID").val() },
            success: function (res) {
                // states contains the JSON formatted list
                // of states passed from the controller
                $("#ProgrammeID").append('<option value="">Select Programme</option>');
                $.each(res, function (i, state) {
                    $("#ProgrammeID").append('<option value="' + state.Value + '">' +
                         state.Text + '</option>');
                    // here we are adding option for States

                });
            },
            error: function (ex) {
                alert('Failed to retrieve Programme.' + ex);
            }
        });
        return false;
    })
    $(document).on("change", "#ProgrammeID", function () {
        $("#CountryID").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramSelection", "Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: { programmeID: $("#ProgrammeID").val() },
            success: function (res) {
                if (res != null) {
                   
                    $("#CountryID").append('<option value="">Select Country</option>');
                    $.each(res.CountryList, function (i, state) {
                        $("#CountryID").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States

                    });
                }
                else {
                    $("#CountryID").append('<option value="">Select Country</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve country.' + ex);
            }
        });
        return false;
    });
    $(document).on("change", "#CountryID", function () {
        $("#ProgrammeYear").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeCountrySelection", "Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: { programmeID: $("#ProgrammeID").val(), countryID: $('#CountryID').val() },
            success: function (res) {
                if (res != null) {
                   
                    $("#ProgrammeYear").append('<option value="">Select Programme Year</option>');
                    $.each(res.ProgYearList, function (i, state) {
                        $("#ProgrammeYear").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States

                    });
                }
                else {

                    $("#ProgrammeYear").append('<option value="">Select Programme Year</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Programme year.' + ex);
            }
        });
        return false;
    });
    $(document).on("change", "#ProgrammeYear", function () {
        $("#ProgrammeSemester").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeProgramYearSelection", "Admin",new { area="Admin"})', // we are calling json method

            dataType: 'json',

            data: { programmeID: $("#ProgrammeID").val(), countryID: $('#CountryID').val(), programYear: $('#ProgrammeYear').val() },
            success: function (res) {
                if (res != null) {
                    
                    $("#ProgrammeSemester").append('<option value="">Select Semester</option>');
                    $.each(res.ProgSEMList, function (i, state) {
                        $("#ProgrammeSemester").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                        // here we are adding option for States

                    });
                }
                else {

                    $("#ProgrammeSemester").append('<option value="">Select Semester</option>');

                }
            },
            error: function (ex) {
                alert('Failed to retrieve Semester.' + ex);
            }
        });
        return false;
    });




    function distinct(myArray) {
        var newArray = [];

        $.each(myArray, function (key, value) {
            var exists = false;
            $.each(newArray, function (k, val2) {
                if (value.Value == val2.Value) { exists = true };
            });
            if (exists == false && value.Value != "") { newArray.push(value); }
        });

        return newArray;
    }
</script>
