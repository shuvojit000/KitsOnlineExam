@model Lincoln.Admin.Web.Models.QuestionSetUpViewModel


<div class="content-body">
    <!-- Base style table -->
    @Html.HiddenFor(a => a.PaperDetailsID)

    <div class="row">
        <div class="form-group col-lg-6">
            <label><b>Section Marks </b></label>
            <div class="position-relative">
                @Html.TextBoxFor(a => a.SectionMarks, new { @class = "form-control", @readonly = "readonly" })

            </div>
        </div>

        <div class="form-group col-lg-6">
            <label><b>Remaining Marks </b></label>
            <div class="position-relative">
                @Html.TextBoxFor(a => a.RemainingMarks, new { @class = "form-control", @readonly = "readonly" })

            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-6">
            <label><b>Question No </b></label>
            <div class="position-relative">
                @Html.TextBoxFor(a => a.QuestionNo, new { @class = "form-control", @readonly = "readonly" })

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group row">
                <label class="col-lg-3 label-control"><b>Question Type  </b></label>
                <div class="position-relative col-lg-9">
                    <div class="input-group">
                        <div class="d-inline-block custom-control custom-radio mr-1">
                            <input type="radio" name="QuestionType" disabled="disabled" value="S" @(Model.QuestionType == "S" ? "checked" : "")> Subjective
                        </div>
                        <div class="d-inline-block custom-control custom-radio">
                            <input type="radio" name="QuestionType" disabled="disabled" value="O" @(Model.QuestionType == "O" ? "checked" : "")> Objective
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="form-group col-lg-12">
            <label><b>Question Statement <span class="requiredstar">*</span> </b></label>
            <div class="position-relative">
                @Html.TextAreaFor(a => a.QuestionText, new { @class = "form-control" })
                <span id="QuestionTextVal" style="color:red;display:none" class="valClass">Question Statement is required.</span>
            </div>
        </div>
        @if (Model.QuestionType == "S")
        {
            <div class="form-group col-lg-12">
                <label><b>Answer Statement<span class="requiredstar">*</span> </b></label>
                <div class="position-relative">
                    @Html.TextAreaFor(a => a.AnswerText, new { @class = "form-control" })
                    <span id="AnswerTextVal" style="color:red;display:none" class="valClass">Answer Statement is required.</span>
                </div>
            </div>

        }
        @if (Model.QuestionType == "O")
        {
            <div id="myContent">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group row">
                                <div class="col-lg-1">
                                    <input type="radio" name="AnswerNo" value="1" @(Model.AnswerNo == 1 ? "checked" : "") /> A
                                </div>
                                <div class="col-lg-11">
                                    @Html.TextBoxFor(a => a.OptionAText, new { @class = "form-control" })
                                    <span id="OptionATextVal" style="color:red;display:none" class="valClass">Text is required.</span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group row">
                                <div class="col-lg-1">
                                    <input type="radio" name="AnswerNo" value="2" @(Model.AnswerNo == 2 ? "checked" : "") /> B
                                </div>
                                <div class="col-lg-11">
                                    @Html.TextBoxFor(a => a.OptionBText, new { @class = "form-control" })
                                    <span id="OptionBTextVal" style="color:red;display:none" class="valClass">Text is required.</span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group row">
                                <div class="col-lg-1">
                                    <input type="radio" name="AnswerNo" value="3" @(Model.AnswerNo == 3 ? "checked" : "") /> C
                                </div>
                                <div class="col-lg-11">
                                    @Html.TextBoxFor(a => a.OptionCText, new { @class = "form-control" })
                                    <span id="OptionCTextVal" style="color:red;display:none" class="valClass">Text is required.</span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group row">
                                <div class="col-lg-1">
                                    <input type="radio" name="AnswerNo" value="4" @(Model.AnswerNo == 4 ? "checked" : "") /> D
                                </div>
                                <div class="col-lg-11">
                                    @Html.TextBoxFor(a => a.OptionDText, new { @class = "form-control" })
                                    <span id="OptionDTextVal" style="color:red;display:none" class="valClass">Text is required.</span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group row">
                                <div class="col-lg-1">
                                    <input type="radio" name="AnswerNo" value="5" @(Model.AnswerNo == 5 ? "checked" : "") /> E
                                </div>
                                <div class="col-lg-11">
                                    @Html.TextBoxFor(a => a.OptionEText, new { @class = "form-control" })
                                    <span id="OptionETextVal" style="color:red;display:none" class="valClass">Text is required.</span>
                                </div>
                            </div>
                        </div>
                        <span id="AnswerNoVal" style="color:red;display:none" class="valClass">Select an Answer.</span>
                    </div>
                </div>
            </div>

        }
    </div>
        <div class="row">
            <div class="form-group col-lg-6">
                <label><b>Max Marks </b></label>
                <div class="position-relative has-icon-left ">
                    @Html.TextBoxFor(a => a.QuestionMarks, new { @class = "form-control" })
                    <div class="form-control-position">
                        <i class="fa fa-book"></i>
                    </div>
                    <span id="QuestionMarksVal" style="color:red;display:none" class="valClass">Max Marks is required.</span>
                </div>
            </div>
        </div>



   

    <button type="button" onclick="fnSavePaperDetails()" class="btn btn-primary">
        <i class="fa fa-check-square-o"></i> Save
    </button>
    <button type="button" onclick="fnResetScreen()" class="btn btn-danger">
        <i class="fa fa-check-square-o"></i> Clear
    </button>
    <!--/ Base style table -->
</div>
<script>
    CKEDITOR.plugins.addExternal('ckeditor_wiris', 'https://www.wiris.net/demo/plugins/ckeditor/', 'plugin.js');

    CKEDITOR.replace('QuestionText', {
        filebrowserImageBrowseUrl: '/Home/uploadPartial',
        filebrowserImageUploadUrl: '/Home/uploadnow',
        extraPlugins: 'ckeditor_wiris',
        allowedContent: true
    });
    function updateValue(value) {
        var id = "";
        if (window.parent.CKEDITOR.currentInstance.name == "QuestionText") {
            id = '#' + $('input[id*="_textInput"][aria-required="true"]').attr('id');
            $(id).val(value);
        }
        // this gets called from the popup window and updates the field with a new value
        //document.getElementById(id).value = value;
    }
    if ('@Model.QuestionType' == "S") {

        CKEDITOR.replace('AnswerText', {
            filebrowserImageBrowseUrl: '/Home/uploadPartial',
            filebrowserImageUploadUrl: '/Home/uploadnow',
            extraPlugins: 'ckeditor_wiris',
            allowedContent: true
        });

    }




</script>