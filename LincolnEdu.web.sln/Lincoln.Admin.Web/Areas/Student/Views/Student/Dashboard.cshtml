@using Lincoln.Framework.Common;
@model IEnumerable<Lincoln.Admin.Web.Models.StudentDashboardViewModel>
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Areas/Student/Views/Shared/_StudentLayout.cshtml";
}

<div class="content-wrapper">
    
    <div class="content-body">
        <table id="examList" class="table table-striped table-bordered base-style" style="width:100%">
            <thead>
                <tr>
                    <th>Sl No</th>
                    <th>Course </th>
                    <th>Examination Date</th>
                    <th>Duration (Min)</th>
                    <th>Total Marks</th>
                    <th>Examination Status</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.SLNo</td>
                            <td>@item.CourseName</td>
                            <td>@(item.ExaminationDate==null?string.Empty:Convert.ToDateTime(item.ExaminationDate).ToString("dd/MM/yyyy"))</td>
                            <td>@item.ExaminationDuration</td>
                            <td>@String.Format("{0:0.##}", item.TotalMarks)</td>
                            <td>
                                @if (item.ExamAttendance == "I")
                                {
                                    <a 
                                       @*href="@Url.Action("ExaminationView","Student",new {area="Student",id=CryptoSecurity.encrypt(item.CourseID.ToString()) })"*@ 
                                        onclick="fnExamPage('@CryptoSecurity.encrypt(item.CourseID.ToString())')"
                                        class="btn btn-success" title="Start">Exam Start Now</a>
                                        }
                            </td>
                        </tr>
                    }

                }

            </tbody>
        </table>

        <div class="col-lg-12">
            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" data-keyboard="false" data-backdrop="static">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">
                                <label class="modal-title text-text-bold-600">Guideline for Online Examination</label>
                            </h4>
                            <button class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        </div>
                        <div class="modal-body recoPas">
                            Steps For Accessing Your Exam Online:

                            Close all programs, including email
                            Click on the Click here to open the exam link provided in the email from The College.
                            Click "Log In For Your Exam Here" at the bottom of the screen.
                            Have your Proctor enter the Username and Password provided in the email from The College and click enter.
                            To begin the exam, click on the link to the appropriate exam listed under Online Assessments.

                            Before starting the exam:

                            Please verify that the student's last name appears correctly within the User ID box.

                            During the exam:

                            The student may not use his or her textbook, course notes, or receive help from a proctor or any other outside source.
                            Students must complete the 50-question multiple-choice exam within the 75-minute time frame allotted for the exam.
                            Students must not stop the session and then return to it. This is especially important in the online environment where the system will "time-out" and not allow the student or you to reenter the exam site.
                            <div class="modal-footer">
                                <button type="button" id="agreebtn" data-id="" onclick="fnAgree(this)" class="btn btn-success">
                                    <i class="fa fa-check-square-o"></i> I agree
                                </button>
                                <button type="button" onclick="fnDecline(this)" class="btn btn-danger">
                                    <i class="fa fa-question-circle"></i> I Decline
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    $('#examList').dataTable();
     function fnExamPage(courseId)
    {
         $('#myModal #agreebtn').attr('data-id', courseId);
         $("#myModal").modal('show');
        //window.open("@Url.Action("ExaminationView","Student",new { area = "Student" })?id=" + courseId, "newWin", "width=" + screen.availWidth + ",height=" + screen.availHeight);
     }
    function fnAgree(e) {
        debugger;
        var courseId = $(e).attr('data-id');
        if (courseId!='') {
            window.location.href = "@Url.Action("ExaminationView","Student",new { area = "Student" })?id=" + courseId;
        }
        else {
            alert('Something went wrong.');

        }

    }
    function fnDecline(e) {
        $('#myModal #agreebtn').attr('data-id', '');
        $("#myModal").modal('hide');
    }
    function IsAllowed() {
        var isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;

        // Firefox 1.0+
        var isFirefox = typeof InstallTrigger !== 'undefined';

        // Safari 3.0+ "[object HTMLElementConstructor]"
        var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));

        // Internet Explorer 6-11
        var isIE = /*@@cc_on!@@*/false || !!document.documentMode;

        // Edge 20+
        var isEdge = !isIE && !!window.StyleMedia;

        // Chrome 1 - 79
        var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);

        // Edge (based on chromium) detection
        var isEdgeChromium = isChrome && (navigator.userAgent.indexOf("Edg") != -1);

        // Blink engine detection
        var isBlink = (isChrome || isOpera) && !!window.CSS;

        if (isOpera || isSafari || isIE || isEdge || isChrome || isEdgeChromium) {
            alert('You are not allowed to this browser for exam.');
            //var output = 'Detecting browsers by ducktyping:<hr>';
            //output += 'isFirefox: ' + isFirefox + '<br>';
            //output += 'isChrome: ' + isChrome + '<br>';
            //output += 'isSafari: ' + isSafari + '<br>';
            //output += 'isOpera: ' + isOpera + '<br>';
            //output += 'isIE: ' + isIE + '<br>';
            //output += 'isEdge: ' + isEdge + '<br>';
            //output += 'isEdgeChromium: ' + isEdgeChromium + '<br>';
            //output += 'isBlink: ' + isBlink + '<br>';
            //alert(output);
            return true;
        }
        else {
            return false;
        }

    }

</script>
