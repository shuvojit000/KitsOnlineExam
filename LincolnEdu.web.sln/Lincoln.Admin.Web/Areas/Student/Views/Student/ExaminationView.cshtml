@model Tuple<Lincoln.Admin.Web.Models.StudentExamViewModel, List<Lincoln.Admin.Web.Models.ExamQuestionSectionViewModel>>
@{
    ViewBag.Title = "Exam";
    Layout = "~/Areas/Student/Views/Shared/_ExamLayout.cshtml";
}
<style>
    .sectionBack {
        background: #F37B53;
    }

    .labelqM {
        text-orientation: upright;
    }

    .lblPos {
        position: absolute;
        right: 20px;
    }
</style>
<link href="~/Content/assets/HighPiorityjqueryLib/jquery-ui.css" rel="stylesheet" />
<script src="https://cdn.ckeditor.com/4.13.1/standard/ckeditor.js"></script>
<div class="content-wrapper">
    <div class="content-body">
        <!-- Stats -->
        <div class="row">
            <div class="col-xl-12 col-lg-12">
                <!--PAGE CONTENT -->
                <div id="online">
                    <div class="inner">
                        <div>
                            <div class="bdstyl">
                                <!-- GRID SHOW START -->
                                <div class="row-fluid">
                                    <div class="span12">
                                        <!-- BEGIN BASIC PORTLET-->
                                        <div class="widgetk orange">
                                            <div class="widgetk-title">
                                                <div class="col-lg-4">
                                                    <div class="col-sm-6 kltbx">
                                                        Full Marks: <span id="FullMarksExam" class="timerclass">@String.Format("{0:0.##}", Model.Item1.TotalMarks)</span>
                                                    </div>
                                                    <div class="col-sm-6 kltbx">
                                                        Time Left: <span id="timer" class="timerclass"></span>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4">
                                                    <div class="kmdbx">

                                                    </div>
                                                </div>
                                                <div class="col-lg-4">
                                                    <div class="krtbx">
                                                        <a class="btnk btnk-primary float-right" onclick="fnSubmitSheet()" style="margin-top:-6px;">
                                                            <i class="fa fa-share"></i> &nbsp; <span>Submit Exam</span>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="widgetk-title" style="background:#2a2e30">
                                                <div class="col-lg-4">
                                                    <div class="col-sm-6 kltbx">
                                                        Name: @Model.Item1.StudentName
                                                    </div>

                                                </div>
                                                <div class="col-lg-4">
                                                    <div class="kmdbx">
                                                        @Model.Item1.ExaminationName
                                                    </div>
                                                </div>
                                                <div class="col-lg-4">
                                                    <div class="krtbx">
                                                        StudentID: @User.UserName
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="widgetk-body">
                                                <!--ONLINE ANSWER PAPER SHOW START -->
                                                <!--==========================-->
                                                <section class="main-page">
                                                    <div class="containerk">
                                                        <div class="row">
                                                            <div class="col-xs-12 col-md-12 col-sm-12">
                                                                <div class="row">
                                                                    <div class="col-sm-12">
                                                                        <div id="navHeader">
                                                                            @{ Html.RenderAction("HeaderButton", "Student", new { area = "Student", courseID = Model.Item1.CourseID, questionNo = "1" });}
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <!--SECTION PART START-->
                                                                <div class="row">
                                                                    <div class="col-sm-12">
                                                                        <div class="panelEx">
                                                                            <center>
                                                                                @if (Model.Item2 != null && Model.Item2.Count() > 0)
                                                                                {
                                                                                    foreach (var sectionData in Model.Item2)
                                                                                    {
                                                                                        <a id="sect-@sectionData.SectionName" style="cursor:pointer" onclick="fnSetQuestionSheet('@Model.Item1.CourseID','@sectionData.MinQuestionNo','@sectionData.SectionName')" class="load_more btnk btnk-primary secdata"><span>@sectionData.SectionName</span></a>
                                                                                    }

                                                                                }


                                                                            </center>
                                                                            <span class="labelqM lblPos">
                                                                                <span><b>Question Marks :</b></span>
                                                                                <span id="MaxMarksQuestion">0</span>
                                                                            </span>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                                <!--SECTION PART END-->
                                                                <div class="row">
                                                                    <!--QUESTION BODY LEFT SECTION START-->
                                                                    <div class="col-sm-2k">
                                                                        <div class="casLftPanel">
                                                                            @{ Html.RenderAction("LeftSuggestionPanel", "Student", new { area = "Student", id = Model.Item1.CourseID });}
                                                                        </div>
                                                                    </div><!-- /.col-sm-2 -->
                                                                    <!--QUESTION BODY LEFT SECTION END-->
                                                                    <!--QUESTION BODY RIGHT SECTION START-->
                                                                    <div class="col-sm-10k">
                                                                        <div id="HeaderSetInfoPanel">
                                                                            @Html.TextArea("QuestionText", new { @class = "form -control" })
                                                                            @*@Html.Raw(Model.QuestionText)*@
                                                                        </div>
                                                                        <div id="QuestionBody">
                                                                            @{Html.RenderAction("QuestionSheet", "Student", new
                                                                                {
                                                                                    area = "Student",
                                                                                    courseID = Model.Item1.CourseID,
                                                                                    questionNo = Model.Item2?.FirstOrDefault().MinQuestionNo.ToString() ?? string.Empty,
                                                                                    sectionName = Model.Item2?.FirstOrDefault().SectionName.ToString() ?? string.Empty
                                                                                });}
                                                                        </div>
                                                                    </div><!-- /.col-sm-10 -->
                                                                    <!--QUESTION BODY RIGHT SECTION END-->

                                                                </div><!-- /.row -->
                                                            </div>
                                                        </div>
                                                    </div><!-- /.container -->
                                                </section>
                                                <!--==========================-->
                                                <!--ONLINE ANSWER PAPER SHOW END -->
                                            </div>
                                        </div>
                                        <!-- END BASIC PORTLET-->
                                    </div>
                                </div>
                                <!-- GRID SHOW END -->
                                <div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--END PAGE CONTENT -->
            </div>
        </div>
        <!--/ Stats -->
    </div>

</div>

<div id="dialog" title="Calculator">
    @{Html.RenderAction("CalculatorWindow", "Student", new { area = "Student" }); }
</div>
<script src="~/Content/assets/TestExam/jquery.countdownTimer.js"></script>
<script>
    $(document).ready(function () {
        $(document).bind("contextmenu", function (e) {
            return false;
        });

    });
    document.onkeypress = function (event) {
        event = (event || window.event);
        if (event.keyCode == 123) {
            return false;
        }
    }
    document.onmousedown = function (event) {
        event = (event || window.event);
        if (event.keyCode == 123 || event.keyCode == 27) {
            return false;
        }
    }
    document.onkeydown = function (event) {
        event = (event || window.event);
        if (event.keyCode == 123) {
            return false;
        }
    }
    $(function () {
        $("#timer").countdowntimer({
            hours: '@Model.Item1.ExamHour',
            minutes: '@Model.Item1.ExamMin',
            seconds: '@Model.Item1.ExamSecond',
            timeUp: timeisUp,
            beforeExpiryTime: "00:00:15:00",
            beforeExpiryTimeFunction: beforeExpiryFunc,
            beforeExpiryTimeFirstFunction: fn5min,
            beforeExpiryTimeSecondFunction: fn1min
        });
        function timeisUp() {
            fnSubmitSheet(true);
        }
        function beforeExpiryFunc() {
            alert('15 min left.');
        }
        function fn5min() {
            alert('5 min left.');
        }
        function fn1min() {
            alert('1 min left.');
        }
        $('#dialog').dialog({
            autoOpen: false,
        });
    });
    CKEDITOR.plugins.addExternal('ckeditor_wiris', 'https://www.wiris.net/demo/plugins/ckeditor/', 'plugin.js');
    CKEDITOR.replace('QuestionText', {
        allowedContent: true,
        extraPlugins: 'ckeditor_wiris',
        readOnly: true,
        resize_enabled: false,
        removePlugins: 'elementspath',
        on:
   {
       instanceReady: function (evt) {
           $($('.cke_top')[0]).css({ 'display': 'none' });
       }
   }
    });
    function ShowCalculator() {
        $('#dialog').dialog('open');
    }
    function fnSetQuestionSheet(courseID, questionNo, sectionName) {
        fnArrangeHeaderbutton(questionNo, courseID);
        $('#QuestionBody').load('/Student/Student/QuestionSheet/' + courseID + '/' + questionNo + '/' + sectionName);
        fnSaveExaminationTest();
    }
    function fnSubmitSheet(isTimeUp) {
        debugger;
        courseID = '@Model.Item1.CourseID';
        var time = $('#timer').html().split(':');
        var hour = time[0];
        var minute = time[1];
        var second = time[2];
        var totalSecond = hour * 60 * 60 + minute * 60 + second;
        var isAllow = false;

        var model = {
            PaperDetailsID: $('input[name="PaperDetailsID"]').val(),
            PaperID: $('input[name="PaperID"]').val(),
            ExaminationDuration: 3600,
            TotalTime: isTimeUp ? 0 : totalSecond
        };
        if (typeof isTimeUp === 'undefined') {
            if (confirm("Are you sure?")) {
                isAllow = true;
            }
        }
        else {
            isAllow = true;
        }

        if (isAllow) {
            $.ajax({
                url: '@Url.Action("SaveExaminationSheet", "Student",new {area= "Student" })',
                data: JSON.stringify(model),
                type: 'POST',
                cache: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result == 0) {
                        alert('Error in your requst.');
                    }
                    else {
                        window.location.href = '@Url.Action("Dashboard", "Student", new {area="Student" })';
                    }
                },
                error: function (e) {
                    alert('Error in your requst.');
                }
            });
        }


    }
    function fnSaveExaminationTest() {
        courseID = '@Model.Item1.CourseID';

        var isAnsQues = false;
        if (typeof $('input[name="AnswerNo"]:checked').val() !== 'undefined' && $('input[name="AnswerNo"]:checked').val() != '') {
            isAnsQues = true;
        }
        else if (typeof CKEDITOR.instances['AnswerText'] !== 'undefined' && CKEDITOR.instances['AnswerText'].getData() != '') {
            isAnsQues = true;
        }
        if (isAnsQues) {

            var model = {
                QuestionNo: $('#QuestionNo').val(),
                IsAnswer: $('#IsAnswer').val(),
                AnswerText: $('input[name="QuestionType"]').val() == "S" ? CKEDITOR.instances['AnswerText'].getData() : "",
                AnswerNo: $('input[name="AnswerNo"]:checked').val()
            };
            $.ajax({
                url: '@Url.Action("SaveExaminationTest", "Student",new {area= "Student" })',
                data: JSON.stringify(model),
                type: 'POST',
                cache: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result == 0) {
                        alert('Error in your requst.');
                    }
                    fnRefreshLeftPanel();
                },
                error: function (e) {
                    alert('Error in your requst.');
                }
            });

        }
        else {
            fnRefreshLeftPanel();
        }
    }

    function flagCurrentQuestion() {
        courseID = '@Model.Item1.CourseID';

        var model = {
            QuestionNo: $('#QuestionNo').val(),
            IsAnswer: -1,
        };
        $.ajax({
            url: '@Url.Action("SaveExaminationTest", "Student",new {area= "Student" })',
            data: JSON.stringify(model),
            type: 'POST',
            cache: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result == 0) {
                    alert('Error in your requst.');
                }
                fnRefreshLeftPanel();
            },
            error: function (e) {
                alert('Error in your requst.');
            }
        });

    }
    function goTo(questionNo, courseID) {
        fnSaveExaminationTest();
        $('#QuestionBody').load('/Student/Student/QuestionSheet/' + courseID + '/' + questionNo + '/');
        fnArrangeHeaderbutton(questionNo, courseID);
    }



    function fnRefreshLeftPanel() {
        $('.casLftPanel').load('/Student/Student/LeftSuggestionPanel/@Model.Item1.CourseID');
    }
    function fnArrangeHeaderbutton(questionNo, courseID) {
        $('#navHeader').load('/Student/Student/HeaderButton/' + courseID + '/' + questionNo);
    }

    setInterval(function () {
        $.ajax({
            url: '@Url.Action("UpdateExamTimer", "Student",new {area= "Student" })',
            data: { examinationId: '@Model.Item1.ExaminationID', courseId: '@Model.Item1.CourseID', timerTime: $('#timer').html() },
            type: 'POST',
            cache: false,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            dataType: "json",
            success: function (result) {
               
            },
            error: function (e) {
                console.log(e);
            }
        });

    }, 2000);
</script>
